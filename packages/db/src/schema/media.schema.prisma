model Media {
    id              Int               @unique @default(autoincrement())
    fileId          Int?
    mimeType        String // audio.. pdf.. img
    file            File?             @relation(fields: [fileId], references: [id])
    title           String?
    authorId        Int?
    author          Author?           @relation(fields: [authorId], references: [id])
    mediaIndexId    Int?              @unique
    albumAudioIndex AlbumAudioIndex?
    blog            Blog?             @relation(fields: [blogId], references: [id])
    blogId          Int?
    mediaLocation   MediaLocation?    @relation(fields: [mediaLocationId], references: [id])
    mediaLocationId Int?
    albumId         Int?
    playHistories   RecentlyPlayed[]
    PlaylistEpisode PlaylistEpisode[]
    album           Album?            @relation(fields: [albumId], references: [id])

    @@index([fileId])
}

model File {
    id           Int         @unique @default(autoincrement())
    createdAt    DateTime?   @default(now()) @db.Timestamp(0)
    updatedAt    DateTime?   @updatedAt
    deletedAt    DateTime?
    fileType     String
    fileId       String
    fileUniqueId String?     @unique
    fileSize     Float?
    fileName     String?
    /// @kyselyType('mime1')
    mimeType     String?
    width        Float?
    height       Float?
    duration     Float?
    medias       Media[]
    thumbnail    Thumbnail[]
}

model Thumbnail {
    id        Int       @unique @default(autoincrement())
    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime?

    fileId Int
    blogId Int?
    albums Album[]
    blogs  Blog[]

    file File? @relation(fields: [fileId], references: [id])
}

model RecentlyPlayed {
    id        Int       @unique @default(autoincrement())
    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime?
    mediaId   Int
    progress  Int
    playedAt  DateTime  @default(now())
    Media     Media     @relation(fields: [mediaId], references: [id])
    User      User      @relation(fields: [userId], references: [id])
    userId    Int
}

model Playlist {
    id        Int       @unique @default(autoincrement())
    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime?

    name String

    User     User?             @relation(fields: [userId], references: [id])
    userId   Int?
    episodes PlaylistEpisode[]
}

model PlaylistEpisode {
    id         Int      @id @default(autoincrement())
    playlistId Int
    episodeId  Int
    addedAt    DateTime @default(now())

    // Relationships
    playlist Playlist @relation(fields: [playlistId], references: [id])
    episode  Media    @relation(fields: [episodeId], references: [id])
}
