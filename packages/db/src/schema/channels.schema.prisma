model Channel {
    id        Int       @unique @default(autoincrement())
    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime?

    title    String?
    username String  @unique

    favourite Boolean?
    meta      Json?

    forwards MessageForward[]

    blogs    Blog[]
    watchers MessageForwardWatcher[]

    @@unique([username, deletedAt])
}

model MessageForward {
    id        Int       @unique @default(autoincrement())
    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime?

    forwardedAt DateTime?

    messageId     Int
    publishedDate DateTime
    channelId     Int

    status String

    channel   Channel                @relation(fields: [channelId], references: [id])
    watcher   MessageForwardWatcher? @relation(fields: [watcherId], references: [id])
    watcherId String?

    @@unique([messageId, channelId, deletedAt])
}

model MessageForwardWatcher {
    id            String
    channelId     Int
    channel       Channel          @relation(fields: [channelId], references: [id])
    forwardCount  Int
    capturedCount Int
    status        String // in-progress
    forwardedAt   DateTime?
    forwards      MessageForward[]
    blogs         Blog[]

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime?

    @@unique([id])
}
